info:
  description: "Solar Budget API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "Anidia's Solar Budget AI"
  version: v1.0
openapi: 3.0.1

components:
  schemas:
    SolarBudgetRequest:
      description: The required information to calculate a Solar Budget
      properties:
        entryKey:
          description: Entry key
          type: string
        houseType:
          description: Kind of house
          type: string
          enum: [ Unifamiliar de 1 planta sin A/A, Unifamiliar de 1 planta con A/A, 
          Unifamiliar de 2-3 plantas sin A/A ni piscina, Unifamiliar de 2-3 plantas con A/A o piscina,
          Unifamiliar de 2-3 plantas con A/A y piscina o calefacción eléctrica ]
        monthlyConsumption:
          description: Monthly consumprion
          type: integer 
        annualConsumption: 
          description: Annual Consumption
          type: integer 
        additionalPanels:
          description: User wants aditional panels
          type: string 
          enum: ["Si", "No"]
        panelsSelected:
          description: Selected panels
          type: string 
          enum: ["Standard", "Diseño (LG)"]
        inverterType:
          description: Inverter type
          type: string 
          enum: ["Standard", "Fronius"]
        roofType:
          description: Roof type
          type: string 
          enum: ["Plano o inclinación menor a 20º", "Inclinación superior a 20º"]
        pipelineMeters:
          description: Pipeline meters
          type: integer
        numberAdditionalPanels:
          description: Number of additional panels
          type: integer 
        electricalAppliances:
          $ref: "#/components/schemas/ElectricalAppliance"
    ElectricalAppliance:
      description: Home appliances
      properties:
        electricalAppliance1:
          type: string
          enum: [ Vitrocerámica, Frigorífico, Lavadora, Horno, Televisión, Alumbrado, Ordenador, 
          Microondas, Aire acondicionado, Termo Eléctrico, Patinete eléctrico, Domótica, Coche eléctrico, 
          Secadora, Depuradora Piscina, Ascensor, Bombra de presión, Aspiradora inteligente ]
        electricalAppliance2:
          type: string
          enum: [ Vitrocerámica, Frigorífico, Lavadora, Horno, Televisión, Alumbrado, Ordenador, 
          Microondas, Aire acondicionado, Termo Eléctrico, Patinete eléctrico, Domótica, Coche eléctrico, 
          Secadora, Depuradora Piscina, Ascensor, Bombra de presión, Aspiradora inteligente ]
        electricalAppliance3:
          type: string
          enum: [ Vitrocerámica, Frigorífico, Lavadora, Horno, Televisión, Alumbrado, Ordenador, 
          Microondas, Aire acondicionado, Termo Eléctrico, Patinete eléctrico, Domótica, Coche eléctrico, 
          Secadora, Depuradora Piscina, Ascensor, Bombra de presión, Aspiradora inteligente ]

    SolarBudget:
      description: Information about the solar budget sent by Solusoft API
      properties:
        panelsType:
          description: Tipo de paneles
          type: string
        size:
          description: Size
          $ref: "#/components/schemas/SolarBudgetExtra"
        inverter:
          description: Inverter
          $ref: "#/components/schemas/SolarOutputInverter"
        panelsExtra:
          description: Extra panels
          $ref: "#/components/schemas/SolarBudgetExtra"
        triphasicExtra:
          description: Extra triphasic
          $ref: "#/components/schemas/SolarBudgetExtra"
        inverterExtra:
          description: Extra inverter
          $ref: "#/components/schemas/SolarBudgetExtra"
        roofExtra:
          description: Extra roof
          $ref: "#/components/schemas/SolarBudgetExtra"
        pergolaExtra:
          description: Extra pergola
          $ref: "#/components/schemas/SolarBudgetExtra"
        pipelineExtra:
          description: Extra pipeline
          $ref: "#/components/schemas/SolarBudgetExtra"
        carCharger:
          description: Car charger
          $ref: "#/components/schemas/SolarBudgetExtra"
        battery:
          description: Battery
          $ref: "#/components/schemas/SolarBudgetExtra"
        additionalPanelsInstallation:
          description: Additional Installation
          $ref: "#/components/schemas/SolarBudgetExtra"
        totalPrize:
          description: Total prize
          type: string
        superiorInstallation:
          description: Superior installation data
          $ref: "#/components/schemas/SolarSuperiorInstallation"
        

    SolarBudgetExtra:
      description: Information about some extra from the solar budget
      properties:
        value:
          description: Detail of the extra
          type: string
        unitPrice:
          description: Unit price for the extra
          type: string
        price:
          description: Price for the extra
          type: string

    SolarOutputInverter:
      description: Inverter info
      properties:
        brand:
          description: Brand
          type: string
        model:
          description: Model
          type: string
        price:
          description: Price
          type: string
    
    SuperiorSize:
      properties:
        value:
           type: string
        price:
           type: string

    SolarSuperiorInstallation:
      properties:
        superiorSize:
           $ref: "#/components/schemas/SuperiorSize"
        panelType:
          type: string
        inverterType:
          type: string
        extraFornius:
          type: string
        panelsExtra:
          type: string
        triphasicExtra:
          type: string
        inverterExtra:
          type: string
        roofExtra:
          type: string
        pergolaExtra:
          type: string
        pipelineExtra:
          type: string
        carCharger:
          type: string
        battery:
          type: string
        additionalPanelsInstallation:
          type: string
         
paths:
  "/solar-budgets":
    post:
      operationId: postSolarBudget
      summary: Create a Solar Budget using Solusoft API
      description: Converts all the information into a format usable by Solusoft and returns the response
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SolarBudgetRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/SolarBudgetRequest"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SolarBudget"
            application/xml:
              schema:
                $ref: "#/components/schemas/SolarBudget"
          description: The budget has been created