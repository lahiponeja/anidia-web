info:
  description: "Solar Budget API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "Anidia's Solar Budget AI"
  version: v1.0
openapi: 3.0.1

components:
  schemas:
    Installer:
      description: Solar installer available
      properties:
        installerCode:
          description: Installer code
          type: string
        installerName:
          description: Installer Name
          type: string

    SolarBudgetRequest:
      description: The required information to calculate a Solar Budget
      properties:
        houseType:
          description: Kind of house
          type: string
          enum: [ Unifamiliar de 1 planta sin A/A, Unifamiliar de 1 planta con A/A, 
          Unifamiliar de 2-3 plantas sin A/A ni piscina, Unifamiliar de 2-3 plantas con A/A o piscina,
          Unifamiliar de 2-3 plantas con A/A y piscina o calefacción eléctrica ]
        monthlyConsumption:
          description: Monthly consumprion
          type: integer 
        roofType:
          description: Roof type
          type: string 
          enum: ["Plano o inclinación menor a 20º", "Inclinación superior a 20º"]


    SolarBudget:
      description: Information about the solar budget sent by Solusoft API
      properties:
        panelsType:
          description: Tipo de paneles
          type: string
        size:
          description: Size
          $ref: "#/components/schemas/SolarBudgetSize"
        inverter:
          description: Inverter
          $ref: "#/components/schemas/SolarOutputInverter"
        panelsExtra:
          description: Extra panels
          type: string
        triphasicExtra:
          description: Extra triphasic
          type: string
        inverterExtra:
          description: Extra inverter
          type: string
        roofExtra:
          description: Extra roof
          type: string
        pergolaExtra:
          description: Extra pergola
          type: string
        pipelineExtra:
          description: Extra pipeline
          type: string
        carCharger:
          description: Car charger
          type: string
        battery:
          description: Battery
          type: string
        additionalPanelsInstallation:
          description: Additional Installation
          type: string
        totalPrice:
          description: Total price
          type: string
        superiorInstallation:
          description: Superior installation data
          $ref: "#/components/schemas/SuperiorInstallation"
        

    SolarBudgetSize:
      description: Information about some extra from the solar budget
      properties:
        value:
          description: Detail of the extra
          type: string
        unitPrice:
          description: Unit price for the extra
          type: string
        price:
          description: Price for the extra
          type: string
        basePanels:
          description: Base panels
          type: string
        totalPanels:
          description: Total panels
          type: string

    SolarOutputInverter:
      description: Inverter info
      properties:
        brand:
          description: Brand
          type: string
        model:
          description: Model
          type: string
        price:
          description: Price
          type: string
    
    SuperiorSize:
      properties:
        value:
           type: string
        price:
           type: string
        basePanels:
          description: Base panels
          type: string

    SuperiorInstallation:
      properties:
        superiorSize:
           $ref: "#/components/schemas/SuperiorSize"
        panelsType:
          type: string
        inverterType:
          type: string
        extraFornius:
          type: string
        panelsExtra:
          type: string
        triphasicExtra:
          type: string
        inverterExtra:
          type: string
        roofExtra:
          type: string
        pergolaExtra:
          type: string
        pipelineExtra:
          type: string
        carCharger:
          type: string
        battery:
          type: string
        additionalPanelsInstallation:
          type: string
    PostalCode:
      description: Postal code and name for municipalities covered by Anidia
      properties:
        postalCode:
          description: Postal Code
          type: string
        municipalityName:
          description: Municipality name
          type: string
        municipalityId:
          description: INE Municipality identifier
          type: string
        populationId:
          description: Population identifier
          type: string
        provinceId:
          description: Municipality name (2 first digits from postal code)
          type: string
      type: object
    Address:
      description: All the information about an address from Anidia CRM
      properties:
        kind:
          description: Type of the address (street, avenue...)
          type: string
        name:
          description: Name of the address
          type: string
        addressId:
          description: Id of the address
          type: string
    Estate:
      description: All the information about an estate
      properties:
        addressKind:
          description: Type of the address (street, avenue...)
          type: string
        addressName:
          description: Name of the address
          type: string
        number:
          description: Number of the gate
          type: string
        annex:
          description: Annex to the gate number (e.g BIS in 2 BIS)
          type: string
        gateId:
          description: Unique identifier of the gate
          type: string
    Property:
      description: All the information about the house in which someone lives
      properties:
        address:
          description: Full address for the property
          type: string
        propertyId:
          description: Property unique identifier
          type: string
        block:
          description: Block of the property (e.g. 2)
          type: string
        ladder:
          description: Ladder of the property (e.g. Izq)
          type: string
        floor:
          description: Floor of the property (e.g. 2º)
          type: string
        door:
          description: Door in the flor of the property (e.g. C)
          type: string

    
paths:
  "/solar-budgets":
    post:
      operationId: postSolarBudget
      summary: Create a Solar Budget using Solusoft API
      description: Converts all the information into a format usable by Solusoft and returns the response
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SolarBudgetRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/SolarBudgetRequest"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SolarBudget"
            application/xml:
              schema:
                $ref: "#/components/schemas/SolarBudget"
          description: The budget has been created

  "/municipalities/{postalCode}":
    get:
      operationId: getMunicipalityPostalCodePage
      summary: Get the municipalities for a postal code
      description: Get all the municipalities for a postal code from the Anidia database
      parameters:
        - name: "postalCode"
          in: "path"
          description: "Postal Code of the municipalities"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PostalCode"
            application/xml:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PostalCode"
          description: ""
      tags: ["PostalCode"]
  
  "/availability":
    get:
      operationId: getAvailability
      summary: Get solar installer availability
      description: Get solar installer availability
      parameters:
        - name: "postalCode"
          in: "query"
          description: "Postal Code"
          required: true
          schema:
            type: "string"
        - name: "municipalityId"
          in: "query"
          description: "Municipality Id"
          required: false
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Installer"
            application/xml:
              schema:
                $ref: "#/components/schemas/Installer"
          description: Found installer


  "/properties":
    get:
      operationId: getPropertiesPage
      summary: Get all properties for an estate
      description: Get all the properties for an estate
      parameters:
        - name: "postalCode"
          in: "query"
          description: "Gate Id of the estate in CRM"
          required: true
          schema:
            type: "string"
        - name: "municipalityId"
          in: "query"
          description: "Municipality Id"
          required: true
          schema:
            type: "string"
        - name: "addressId"
          in: "query"
          description: "Street Id"
          required: true
          schema:
            type: "string"
        - name: "portalNumber"
          in: "query"
          description: "Portal number"
          required: true
          schema:
            type: "string"
            
      responses:
        200:
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Property"
            application/xml:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Property"
          description: ""
      tags: ["Property"]

  "/addresses/{populationId}/{postalCode}":
    get:
      operationId: getAddressesPostalCodePage
      summary: Get all addresses for a population and postal code
      description: Get all the addresses for a municipality and postal code from Anidia CRM
      parameters:
        - name: "populationId"
          in: "path"
          description: "Population Id"
          required: true
          schema:
            type: "string"
        - name: "postalCode"
          in: "path"
          description: "Postal Code of the addresses"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Address"
            application/xml:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Address"
          description: ""
      tags: ["Address"]